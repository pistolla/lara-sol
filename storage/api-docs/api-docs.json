{
    "openapi": "3.0.0",
    "info": {
        "title": "LaraSol API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/counties": {
            "get": {
                "description": "Get all Counties",
                "operationId": "getCountiesList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Counties"
                ],
                "summary": "Store new County",
                "description": "Returns county data",
                "operationId": "storeCounties",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountiesFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Counties"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/counties/{id}": {
            "get": {
                "tags": [
                    "Counties"
                ],
                "summary": "Get county information",
                "description": "Returns county data",
                "operationId": "getCountyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Counties"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Counties"
                ],
                "summary": "Update existing county",
                "description": "Returns updated county data",
                "operationId": "updateCounties",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountiesFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Counties"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Counties"
                ],
                "summary": "Delete existing county",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCounty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "County id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/createWithArray": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Creates list of users with given input array",
                "description": "",
                "operationId": "createUsersWithArrayInput",
                "requestBody": {
                    "description": "List of user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/createWithList": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Creates list of users with given input array",
                "description": "",
                "operationId": "createUsersWithListInput",
                "requestBody": {
                    "description": "List of user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CountiesFormRequest": {
                "title": "County Form request",
                "required": [
                    "county_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "county_name": {
                        "description": "County Name",
                        "type": "string",
                        "example": "Nairobi"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CountiesFormRequest"
                }
            },
            "BaseModel": {
                "properties": {
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Counties": {
                "required": [
                    "county_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "county_name": {
                        "description": "County Name",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Counties"
                }
            },
            "FarmTypes": {
                "required": [
                    "farm_type_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "farm_type_name": {
                        "description": "Farm Type Name",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FarmTypes"
                }
            },
            "Farmer": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "national_id": {
                        "description": "National Id no.",
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "gender": {
                        "description": "Gender male or female",
                        "type": "string",
                        "readOnly": "true",
                        "example": "male"
                    },
                    "dob": {
                        "description": "Date of Birth",
                        "type": "string",
                        "format": "date-time",
                        "example": "2019-02-25"
                    },
                    "email": {
                        "description": "Farmer unique email address",
                        "type": "string",
                        "format": "email",
                        "example": "farmer@gmail.com"
                    },
                    "phone": {
                        "description": "Farmer phone number",
                        "type": "string",
                        "example": "254716365943"
                    },
                    "status": {
                        "description": "Registration status",
                        "type": "string",
                        "example": "Registered"
                    },
                    "county": {
                        "description": "Farm County Name",
                        "type": "string",
                        "example": "Nyeri"
                    },
                    "ward": {
                        "description": "Farm ward name",
                        "type": "string",
                        "example": "MATHIOYA"
                    },
                    "village": {
                        "description": "Farm village name",
                        "type": "string",
                        "example": "Kariguini"
                    },
                    "farm_type": {
                        "description": "Type of Farming",
                        "type": "string",
                        "example": "Subsistence"
                    },
                    "produce": {
                        "description": "List of farm produce",
                        "type": "string",
                        "example": "['Mangoes','Cashew Nut']"
                    },
                    "farm_house": {
                        "description": "Image of farm house",
                        "type": "string",
                        "example": "img_20230103_220125.jpg"
                    },
                    "terms": {
                        "description": "Terms and Condition",
                        "type": "string",
                        "example": "Accepted"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "Permission": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "guard_name": {
                        "description": "Guard name",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Permission"
                }
            },
            "Produces": {
                "required": [
                    "produce_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "produce_name": {
                        "description": "Produces",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Produces"
                }
            },
            "Program": {
                "required": [
                    "program_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "program_name": {
                        "description": "Program Name",
                        "type": "string"
                    },
                    "season": {
                        "description": "Season",
                        "type": "string"
                    },
                    "season_start": {
                        "description": "Season Start",
                        "type": "string"
                    },
                    "season_end": {
                        "description": "Season End",
                        "type": "string"
                    },
                    "farm_type_criteria": {
                        "description": "Farm Type Criteria",
                        "type": "string"
                    },
                    "farm_produce_criteria": {
                        "description": "Farm Produce Criteria",
                        "type": "string"
                    },
                    "county_boundary_criteria": {
                        "description": "County Criteria",
                        "type": "string"
                    },
                    "ward_boundary_criteria": {
                        "description": "Ward Criteria",
                        "type": "string"
                    },
                    "maximum_farmers": {
                        "description": "Maximum Farmers",
                        "type": "integer"
                    },
                    "disbursed_amount": {
                        "description": "Disbursed Amount",
                        "type": "number",
                        "format": "float"
                    },
                    "deposited_amount": {
                        "description": "Deposited Amount",
                        "type": "number",
                        "format": "float",
                        "readOnly": "true"
                    },
                    "status": {
                        "description": "Status",
                        "type": "string"
                    },
                    "organization": {
                        "description": "Organization",
                        "type": "string"
                    },
                    "organization_logo": {
                        "description": "Organization Logo",
                        "type": "string"
                    },
                    "bank_account": {
                        "description": "Bank account",
                        "type": "string"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Program"
                }
            },
            "Role": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "User guard name",
                        "type": "string"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "user@gmail.com"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Location"
                    },
                    "about": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Describe"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Confirmation"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "Wards": {
                "required": [
                    "ward_name",
                    "county_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "ward_name": {
                        "description": "Ward name",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "county_id": {
                        "description": "County id",
                        "type": "integer",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Wards"
                }
            }
        }
    }
}